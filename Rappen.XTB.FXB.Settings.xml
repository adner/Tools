<?xml version="1.0" encoding="utf-8"?>
<OnlineSettings xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <SettingsVersion>1</SettingsVersion>
  <DeprecatedNames>
    <string>*Deprecated*</string>
    <string>*Inaktuell*</string>
  </DeprecatedNames>
  <IntegratedToTools>
    <string>Bulk Data Updater</string>
    <string>SQL 4 CDS</string>
    <string>Export To Excel</string>
    <string>Data Migration Tool</string>
    <string>View Designer</string>
    <string>Bulk Workflow Execution</string>
    <string>BPF Manager</string>
  </IntegratedToTools>
  <AiSupport>
    <Prompts>
        <System>You are an agent that helps the user interact with Dataverse using FetchXML queries. 
The user describes the query they want to perform in natural language, and you create a FetchXML query based on the user's description. 
Your answers are short and to the point, maybe with a bit of humor as well. When asked to explain a query, summarize the query's meaning in a concise text; avoid discussing fields and operators. 
Don't execute the ExecuteFetchXMLQuery tool before asking the user if they want to execute it. 
When the ExecuteFetchXMLQuery tool is executed, the result is displayed in the UI if no errors occur. 
The original FetchXML we are working with is: 
{fetchxml}. 
This FetchXML can be modified as the conversation progresses. 
If you modify the current FetchXML, please call the tool UpdateCurrentFetchXml and send the modified FetchXML query as a parameter.
If you have made a suggestion for a FetchXml query, make sure that you always call the tool UpdateCurrentFetchXml before you call ExecuteFetchXMLQuery to execute the query. 
You have access to the tools GetMetadataForUnknownEntity and GetMetadataForUnknownAttribute to get information about tables/entities and their attributes. Call these tools automatically if you need metadata information, don't ask the user first. 
Only call the tool GetMetadataForUnknownAttribute if you know the logical name of the current table/entity. 
If the user wants to retrieve standard Dataverse entities (for example contact, opportunity and lead), don't call GetMetadataForUnknownEntity and GetMetadataForUnknownAttribute unless you absolutely have to. Instead rely on your existing knowledge about these standard entities and their attributes. 
Call GetMetadataForUnknownEntity and GetMetadataForUnknownAttribute mainly for custom tables and attributes - that is tables and attributes that have '_' in their logical names. 
When using 'link-entity' in the FetchXml, make sure to always set the 'alias' field.</System>
        <CallMe>Please always call me: {callme}</CallMe>
        <Update>I have updated the FetchXML query to:
{fetchxml}
This is the FetchXml that we are currently working with.</Update>
        <EntityMeta>You are an agent that is given a list of table metadata in the format {"LN":"[logical name of entity]","DN":"[display name of entity]"}.
You help the user find one or many entries that matches a description supplied by the user.
You return the found items as a JSON array with entries in the format {"LN":"[logical name of entity]","DN":"[display name of entity]"}.
If nothing is found, return an empty array.
Here is the list of metadata:
{metadata}</EntityMeta>
        <AttributeMeta>You are an agent that is given a list of attribute metadata in the format {"LN":"[logical name of attribute]","DN":"[display name of attribute]"}.
You help the user find one or many entries that matches a description supplied by the user, and you inspect both the logical names and display names for potential matches, using fuzzy matching.
You return all the matching items as a JSON array with entries in the format {"LN":"[logical name of attribute]","DN":"[display name of attribute]"}.
If nothing is found, return an empty array.
Here is the list of attribute metadata for the entity:
{metadata}</AttributeMeta>
    </Prompts>
    <AiSuppliers>
      <AiSupplier>
        <Name>OpenAI</Name>
        <Url>https://openai.com/</Url>
        <Models>
          <AiModel>
            <Name>gpt-4.1</Name>
            <Url>https://platform.openai.com/docs/models/gpt-4.1</Url>
          </AiModel>
          <AiModel>
            <Name>gpt-4.1-mini</Name>
            <Url>https://platform.openai.com/docs/models/gpt-4.1-mini</Url>
          </AiModel>
          <AiModel>
            <Name>gpt-4.1-nano</Name>
            <Url>https://platform.openai.com/docs/models/gpt-4.1-nano</Url>
          </AiModel>
        </Models>
      </AiSupplier>
      <AiSupplier>
        <Name>Anthropic</Name>
        <Url>https://www.anthropic.com/</Url>
        <Models>
          <AiModel>
            <Name>claude-3-5-haiku-20241022</Name>
            <Url>https://api.anthropic.com/v1/messages</Url>
          </AiModel>
          <AiModel>
            <Name>claude-3-7-sonnet-20250219</Name>
            <Url>https://api.anthropic.com/v1/messages</Url>
          </AiModel>
          <AiModel>
            <Name>claude-sonnet-4-20250514</Name>
            <Url>https://api.anthropic.com/v1/messages</Url>
          </AiModel>
        </Models>
      </AiSupplier>
    </AiSuppliers>
  </AiSupport>
</OnlineSettings>